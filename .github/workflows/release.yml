name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run tests with docker-compose
        run: docker compose -f docker-compose-test.yml up --quiet-pull --abort-on-container-exit --exit-code-from fcmh-test

      - name: Show detailed test results on failure
        if: failure()
        run: |
            echo "ðŸ“‹ === LOGS DE CONTENEDOR ==="
            docker compose -f docker-compose-test.yml logs fcmh-test
            echo ""
            echo "ðŸ“‹ === SUREFIRE REPORTS ==="
            docker run --rm -v $(pwd):/workspace ubuntu:latest find /workspace -name "*.txt" -path "*/surefire-reports/*" -exec echo "=== {} ===" \; -exec cat {} \;

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/femcoders-mentor-hub
          tags: |
            type=ref,event=tag      # Tag with version number (e.g., v1.0.0)
            type=raw,value=latest   # Also tag as 'latest' for easy access

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Step 7: Create GitHub Release (Currently disabled)
      # Uncomment the section below to automatically create GitHub releases
      # - name: Create GitHub Release Draft
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref_name }}           # Use the pushed tag name
      #     release_name: Release ${{ github.ref_name }} # Release title
      #     draft: true                                 # Create as draft for manual review
      #     prerelease: false                          # Mark as stable release
      #     body: |
      #       ## Changes
      #
      #       Docker image: `${{ secrets.DOCKER_USERNAME }}/ff5-dreamroute:${{ github.ref_name }}`
      #
      #       ## Installation
      #
      #       ```bash
      #       docker pull ${{ secrets.DOCKER_USERNAME }}/ff5-dreamroute:${{ github.ref_name }}
      #       ```

      - name: Clean up
        if: always()
        run: docker compose -f docker-compose-test.yml down -v